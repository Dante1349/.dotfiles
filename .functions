# t.setTerminalColor(1-7|$(colorname)) 
t.setTerminalColor() {
  if [ -z "$1" ]
  then
        COLOR="$DOTFILES_MAIN_COLOR"
  else
        COLOR="$1"
  fi
 
  colorProfile=$(sed "s/main_color/$COLOR/g" <<< $DOTFILES_DEFAULT_THEME)
  colorProfile=$(sed "s/font_color/$DOTFILES_FONT_COLOR/g" <<< $colorProfile)
  colorProfile=$(sed "s/background_color/$DOTFILES_BACKGROUND_COLOR/g" <<< $colorProfile)
  export PS1=$colorProfile
}

# create backup file
backdafuckup() { 
  cp "$1"{,.bak};
}

# system info
# needs update
sys.info() {
  printf "CPU: "
  cat /proc/cpuinfo | grep "model name" | head -1 | awk '{ for (i = 4; i <= NF; i++) printf "%s ", $i }'
  printf "\n"

  cat /etc/issue | awk '{ printf "OS: %s %s %s %s | " , $1 , $2 , $3 , $4 }'
  uname -a | awk '{ printf "Kernel: %s " , $3 }'
  uname -m | awk '{ printf "%s | " , $1 }'
  #kded4 --version | grep "KDE Development Platform" | awk '{ printf "KDE: %s", $4 }'
  printf "\n"
  uptime | awk '{ printf "Uptime: %s %s %s", $3, $4, $5 }' | sed 's/,//g'
  printf "\n"
  sys.temp | head -1 | awk '{ printf "%s %s %s\n", $1, $2, $3 }'
  sys.temp | tail -1 | awk '{ printf "%s %s %s\n", $1, $2, $3 }'
  #cputemp | awk '{ printf "%s %s", $1 $2 }'
}

g.getBranchParsed() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

t.s() {
  for _pane in $(tmux list-panes -F '#P'); do
    tmux send-keys -t ${_pane} "$@" Enter
  done
}

g.cleanBranches() {
  git fetch -p;
  git branch -vv | grep ': gone]'|  grep -v '\*'| awk '{ print $1; }' | xargs -r git branch -d;
}
